
Функция methodsЛюбой(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	ЗапрашиваемыйМетод = Запрос.ПараметрыURL.Получить("method");
	Если ПустаяСтрока(ЗапрашиваемыйМетод) Или ЗапрашиваемыйМетод = Неопределено Тогда
		ОбменСообщениямиССервисами.СформироватьСервисОтвет(Ответ, 400, "EMPTY METHOD",
			НСтр("ru='Должен быть передан метод для обработки запроса!'"));
		Возврат Ответ;
	КонецЕсли;
	
	Если ЗапрашиваемыйМетод = "healthCheck" Тогда
		Возврат ОбменСообщениямиССервисами.СформироватьСервисОтвет(Ответ, 200);
	КонецЕсли;
	
	Если СтрДлина(ЗапрашиваемыйМетод) > 50 Тогда
		ОбменСообщениямиССервисами.СформироватьСервисОтвет(Ответ, 400, "BAD METHOD", СтрШаблон(
			НСтр("ru='Слишком длинное название метода %1, должно быть не более 50 символов'"), ЗапрашиваемыйМетод));
		Возврат Ответ;
	КонецЕсли;
	
	ТекущийМетод = Справочники.МетодыОбменаСообщениями.НайтиПоКоду(ЗапрашиваемыйМетод);
	Если Не ЗначениеЗаполнено(ТекущийМетод) Тогда
		ОбменСообщениямиССервисами.СформироватьСервисОтвет(Ответ, 400, "NOT FOUND METHOD", СтрШаблон(
			НСтр("ru='Метод %1, не найден в базе'"), ЗапрашиваемыйМетод));
		Возврат Ответ;
	КонецЕсли;
	
	id = Запрос.ПараметрыЗапроса.Получить("id");
	Попытка
		id = Число(id);
	Исключение
	КонецПопытки;
	
	//ИдентификаторСообщения = Запрос.Заголовки.Получить("messageID");
	//Попытка
	//	ИдентификаторСообщения = Число(ИдентификаторСообщения);
	//Исключение
	//КонецПопытки;
	
	ИдентификаторСообщения = Запрос.Заголовки.Получить("WB-Request-Id");
	
	АдресДляОтвета = Запрос.Заголовки.Получить("ResponseAddress");
	ДанныеТела = ОбменСообщениямиССервисами.ПолучитьТелоЗапроса(Запрос, Ответ,, Истина);
	
	Если Не ЗначениеЗаполнено(id) Тогда
		Попытка
			Если ТипЗнч(ДанныеТела) = Тип("Структура") И ДанныеТела.Свойство("id") Тогда
				id = ДанныеТела.id;
			ИначеЕсли ТипЗнч(ДанныеТела) = Тип("Соответствие") И ДанныеТела.Получить("id") <> Неопределено Тогда
				id = ДанныеТела.Получить("id");
			ИначеЕсли ТипЗнч(ДанныеТела) = Тип("Массив") И ДанныеТела.Количество()
				И ТипЗнч(ДанныеТела[0]) = Тип("Структура") И ДанныеТела[0].Свойство("id") Тогда
				id = ДанныеТела[0].id;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	ПараметрыЗаписиСообщения = ОбменСообщениямиССервисами.ПолучитьСтруктуруПараметровДляЗаписиСообщенийОбмена(Запрос,
		ТекущийМетод,, id, ИдентификаторСообщения);
	МенеджерСообщения = ОбменСообщениямиССервисами.ЗаписатьСообщениеОбмена(ПараметрыЗаписиСообщения);
	
	ПараметрыМетода = Новый Структура;
	ПараметрыМетода.Вставить("ИдентификаторСообщения", ИдентификаторСообщения);
	ПараметрыМетода.Вставить("ЗапрашиваемыйМетод", ЗапрашиваемыйМетод);
	ПараметрыМетода.Вставить("ИмяТекущегоМетода", ЗапрашиваемыйМетод);
	ПараметрыМетода.Вставить("Метод", ТекущийМетод);
	ПараметрыМетода.Вставить("Тело", МенеджерСообщения.Тело);
	ПараметрыМетода.Вставить("Заголовки", Запрос.Заголовки);
	ПараметрыМетода.Вставить("ПараметрыЗапроса", Запрос.ПараметрыЗапроса);
	ПараметрыМетода.Вставить("ДанныеТела", ДанныеТела);
	ПараметрыМетода.Вставить("HTTPМетод", Запрос.HTTPМетод);
	ПараметрыМетода.Вставить("id", id);
	ПараметрыМетода.Вставить("АдресДляОтвета", АдресДляОтвета);
	
	Если ЗначениеЗаполнено(ИдентификаторСообщения) И ЗначениеЗаполнено(АдресДляОтвета) Тогда
		
		МенеджерЗаписи = РегистрыСведений.ОчередьАсинхронныхСообщенийОбмена.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, МенеджерСообщения);
		
		Попытка
			МенеджерЗаписи.Записать();
			Попытка
				
				МассивПараметров = Новый Массив;
				МассивПараметров.Добавить(ПараметрыМетода);
				
				ФоновыеЗадания.Выполнить("ОбменСообщениямиССервисами.ОбщаяТочкаВходаВсехАсинхронныхМетодовСервиса", МассивПараметров,
					Строка(ИдентификаторСообщения), СтрШаблон("Ассинхронная обработка сообщения %1", ИдентификаторСообщения));
				ОбменСообщениямиССервисами.СформироватьСервисОтвет(Ответ);
				
			Исключение
				ОбменСообщениямиССервисами.СформироватьСервисОтвет(Ответ, 500, "ERROR",
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		Исключение
			ОбменСообщениямиССервисами.СформироватьСервисОтвет(Ответ, 500, "ERROR",
				СтрШаблон(НСтр("ru='Не удалось записать очередь асинхронных сообщений по причине %1'"), ОписаниеОшибки()));
		КонецПопытки;
		
	Иначе
		
		Ответ = ОбменСообщениямиССервисами.ОбщаяТочкаВходаВсехМетодовСервиса(ПараметрыМетода, Ответ, МенеджерСообщения);
		
	КонецЕсли;
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
	ВключенаЗапись = КодОбщегоНазначения.ПроверитьВключенаЛиДополнительнаяНастройкаПрограммы("Запись лога сообщений обмена");
	Если МенеджерСообщения.Модифицированность() И ВключенаЗапись Тогда
		Попытка
			МенеджерСообщения.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(НСтр(
				"ru='Не удалось переписать сообщение в логе по причине %1'"), ОписаниеОшибки()));
		КонецПопытки;
	КонецЕсли;
	
	ПараметрыЗаписиСообщения = ОбменСообщениямиССервисами.ПолучитьСтруктуруПараметровДляЗаписиСообщенийОбмена(Ответ,
			МенеджерСообщения.Метод, Ложь, МенеджерСообщения.id, МенеджерСообщения.ИдентификаторСообщения);
	МенеджерИсходящегоСообщения = ОбменСообщениямиССервисами.ЗаписатьСообщениеОбмена(ПараметрыЗаписиСообщения);
	
	Если МенеджерИсходящегоСообщения = Неопределено Тогда
		ПараметрыМетода.Вставить("ОтветТело", Неопределено);
		ПараметрыМетода.Вставить("ДатаСобытияВыхода", Неопределено);
		ПараметрыМетода.Вставить("ВремяСобытияВыхода", МенеджерИсходящегоСообщения.ВремяСобытия);
	Иначе
		ПараметрыМетода.Вставить("ОтветТело", МенеджерИсходящегоСообщения.Тело);
		ПараметрыМетода.Вставить("ДатаСобытияВыхода", МенеджерИсходящегоСообщения.ДатаСобытия);
		ПараметрыМетода.Вставить("ВремяСобытияВыхода", МенеджерИсходящегоСообщения.ВремяСобытия);
	КонецЕсли;
	ПараметрыМетода.Вставить("ДатаСобытияВхода", МенеджерСообщения.ДатаСобытия);
	ПараметрыМетода.Вставить("ВремяСобытияВхода", МенеджерСообщения.ВремяСобытия);
	
	Если Ответ.КодСостояния < 200 Или Ответ.КодСостояния > 299 Тогда
		РаботаС_Sentry.ОтправитьЛогПоНашемуAPI(ПараметрыМетода, Ответ);
	КонецЕсли;
	
	Возврат Ответ;

КонецФункции
